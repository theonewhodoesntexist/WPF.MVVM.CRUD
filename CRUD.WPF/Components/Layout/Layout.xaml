<UserControl
    x:Class="CRUD.WPF.Components.Layout.Layout"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:hamburgermenucontrol="clr-namespace:HamburgerMenuControl;assembly=HamburgerMenuControl"
    xmlns:local="clr-namespace:CRUD.WPF.Components.Layout"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    d:DesignHeight="450"
    d:DesignWidth="800"
    mc:Ignorable="d">
    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />

        <Style x:Key="ButtonStyle" TargetType="Button">
            <Setter Property="Padding" Value="20,10" />
            <Setter Property="FontSize" Value="16" />
            <Setter Property="Foreground" Value="#444" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border
                            Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="#1669bb" />
                </Trigger>

                <EventTrigger RoutedEvent="MouseEnter">
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation
                                Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)"
                                To="#dbdbdb"
                                Duration="0:0:0.1" />
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
                <EventTrigger RoutedEvent="MouseLeave">
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation
                                Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)"
                                To="Transparent"
                                Duration="0:0:0.1" />
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="RadioButtonStyle" TargetType="RadioButton">
            <Setter Property="Padding" Value="20,10" />
            <Setter Property="FontSize" Value="16" />
            <Setter Property="Foreground" Value="#444" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RadioButton">
                        <Border
                            Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True" />
                        <Condition Binding="{Binding IsChecked, RelativeSource={RelativeSource Self}}" Value="False" />
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.Setters>
                        <Setter Property="Background" Value="#dbdbdb" />
                        <Setter Property="Foreground" Value="#1669bb" />
                    </MultiDataTrigger.Setters>
                </MultiDataTrigger>
                <DataTrigger Binding="{Binding IsChecked, RelativeSource={RelativeSource Self}}" Value="True">
                    <Setter Property="Background" Value="#dbdbdb" />
                    <Setter Property="Foreground" Value="#1669bb" />
                    <Setter Property="FontWeight" Value="Bold" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <Border
            Grid.Row="0"
            Padding="20"
            Background="#1669bb">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto" />
                    <ColumnDefinition Width="auto" />
                </Grid.ColumnDefinitions>

                <CheckBox x:Name="cbToggleMenu" Grid.Column="0">
                    <CheckBox.Template>
                        <ControlTemplate TargetType="CheckBox">
                            <Grid Background="Transparent">
                                <Viewbox Width="25" Height="25">
                                    <Path
                                        Data="M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z"
                                        Fill="White"
                                        Stretch="Fill" />
                                </Viewbox>
                            </Grid>
                        </ControlTemplate>
                    </CheckBox.Template>
                </CheckBox>

                <TextBlock
                    Grid.Column="1"
                    Margin="20,0,0,0"
                    FontSize="18"
                    Foreground="White"
                    Text="Class Management System" />
            </Grid>
        </Border>

        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <hamburgermenucontrol:HamburgerMenu
                Grid.Column="0"
                Background="#f2f2f2"
                BorderBrush="#dbdbdb"
                BorderThickness="0,0,1,0"
                IsOpen="{Binding IsChecked, ElementName=cbToggleMenu}"
                OpenClosedDuration="0:0:0.1">
                <hamburgermenucontrol:HamburgerMenu.Content>
                    <Grid Margin="0,10">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="auto" />
                        </Grid.RowDefinitions>

                        <StackPanel Grid.Row="0">
                            <hamburgermenucontrol:HamburgerMenuItem>
                                <RadioButton
                                    Command="{Binding NavigateDashboardCommand}"
                                    Content="Dashboard"
                                    GroupName="MenuGroup"
                                    Style="{StaticResource RadioButtonStyle}"
                                    Visibility="{Binding IsLoggedOut, Converter={StaticResource BooleanToVisibilityConverter}}" />
                            </hamburgermenucontrol:HamburgerMenuItem>
                            <hamburgermenucontrol:HamburgerMenuItem>
                                <RadioButton
                                    Command="{Binding NavigateRecordsCommand}"
                                    Content="Records"
                                    GroupName="MenuGroup"
                                    Style="{StaticResource RadioButtonStyle}"
                                    Visibility="{Binding IsLoggedOut, Converter={StaticResource BooleanToVisibilityConverter}}" />
                            </hamburgermenucontrol:HamburgerMenuItem>
                            <hamburgermenucontrol:HamburgerMenuItem>
                                <RadioButton
                                    Command="{Binding NavigateAccountCommand}"
                                    Content="Account"
                                    GroupName="MenuGroup"
                                    Style="{StaticResource RadioButtonStyle}"
                                    Visibility="{Binding IsLoggedOut, Converter={StaticResource BooleanToVisibilityConverter}}" />
                            </hamburgermenucontrol:HamburgerMenuItem>
                        </StackPanel>

                        <StackPanel Grid.Row="1">
                            <hamburgermenucontrol:HamburgerMenuItem>
                                <Button
                                    Command="{Binding LoginCommand}"
                                    Content="Log In"
                                    Style="{StaticResource ButtonStyle}"
                                    Visibility="{Binding IsLoggedIn, Converter={StaticResource BooleanToVisibilityConverter}}" />
                            </hamburgermenucontrol:HamburgerMenuItem>
                            <hamburgermenucontrol:HamburgerMenuItem>
                                <Button
                                    Command="{Binding LogoutCommand}"
                                    Content="Log Out"
                                    Style="{StaticResource ButtonStyle}"
                                    Visibility="{Binding IsLoggedOut, Converter={StaticResource BooleanToVisibilityConverter}}" />
                            </hamburgermenucontrol:HamburgerMenuItem>
                        </StackPanel>
                    </Grid>
                </hamburgermenucontrol:HamburgerMenu.Content>
            </hamburgermenucontrol:HamburgerMenu>

            <ContentControl
                Grid.Column="1"
                Margin="20"
                Content="{Binding ContentViewModel}" />
        </Grid>
    </Grid>
</UserControl>
